apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rgs-v2.fullname" . }}
  namespace: {{ .Values.namespace | default "maverick" }}
  labels:
    {{- include "rgs-v2.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "rgs-v2.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rgs-v2.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository | default "harbor.inf01.activeops.io/maverick/mvg_rgs" }}:{{ .Values.image.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: rgs
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /internal/engine/engineConfigs/
              name: engineconfigs
            - mountPath: /config/
              name: baseconfigs
            - mountPath: /internal/parameterSelector/
              name: parameterconfig
            - mountPath: /internal/forceTool/forcedGameplays/
              name: forcetool
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
    {{- range .Values.volumes }}
        - configMap:
            name: {{ toYaml . }}
          name: {{ toYaml . }}
    {{- end }}
